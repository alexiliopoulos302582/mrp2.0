@model Mrp2.Models.InboundDeliveryViewModel

@{
    ViewData["Title"] = "Inbound Delivery";
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create Order</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
          rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
          crossorigin="anonymous">

   



</head>
<body>



<div class="container">
    <h2 class="mt-5">Inbound Delivery</h2>
    <hr />

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

    @using (Html.BeginForm("Create", "InboundDelivery", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="mb-3 col-4">
            <label for="SupplierId">Supplier</label>
            @Html.DropDownListFor(m => m.SupplierId, (SelectList)ViewBag.Suppliers, "Select Supplier",
            new { @class = "form-control  ", required = "required" })
        </div>



        <div id="rawMaterials">
            <div class="raw-material-group row mb-3">
                <div class="col-md-5">
                    <label>Raw Material</label>
                    @Html.DropDownList("RawMaterials[0].RawMaterialId", (SelectList)ViewBag.RawMaterials, "Select Material", new { @class = "form-control", required = "required" })
                </div>
                <div class="col-md-5">
                    <label>Quantity</label>
                    <input type="text" name="RawMaterials[0].Quantity" class="form-control" required />
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="button" class="btn btn-danger small-remove-btn" onclick="removeRawMaterial(this)">Remove</button>

                </div>
            </div>
        </div>




        <div class="mb-3">
            <button type="button" class="btn btn-warning" onclick="addRawMaterial()">Add Raw Material</button>
        </div>

        <hr class="mt-5"></hr>

        <div class="form-group mb-3">
                <input type="submit" value="Submit" class="btn btn-success col-2" />
                <a class=" btn btn-success m-2 col-2" style="margin-left:45px" href="/home/landingpage">home page</a>
        </div>
    }
</div>

<script>
    let rawMaterialIndex = 1;

    function addRawMaterial() {
        let rawMaterialsDiv = document.getElementById("rawMaterials");
        let newRawMaterial = rawMaterialsDiv.children[0].cloneNode(true);

        newRawMaterial.querySelectorAll("select, input").forEach((input) => {
            input.id = input.name.split('[')[0] + '_' + rawMaterialIndex;
            input.name = input.name.replace(/\[\d+\]/, '[' + rawMaterialIndex + ']');
            input.value = "";
        });

        rawMaterialsDiv.appendChild(newRawMaterial);
        rawMaterialIndex++;
    }

    function removeRawMaterial(button) {
        let rawMaterialsDiv = document.getElementById("rawMaterials");
        if (rawMaterialsDiv.children.length > 1) {
            button.closest('.raw-material-group').remove();
        }
    }
</script>

</body>
</html>
