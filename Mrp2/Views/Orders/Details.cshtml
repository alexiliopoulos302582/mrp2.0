@model Mrp2.Models.OrderViewModel

@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Order Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
          rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
          crossorigin="anonymous">




</head>

<body>
    <div class="container">
        <h1>Order Details</h1>
        <hr />

        <dl class="row">
            <dt class="col-sm-2">Id</dt>
            <dd class="col-sm-10">@Model.Id</dd>

            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@Model.Name</dd>

            <dt class="col-sm-2">PO</dt>
            <dd class="col-sm-10">@Model.Po</dd>

            <dt class="col-sm-2">Notes</dt>
            <dd class="col-sm-10">@Model.Notes</dd>

            <dt class="col-sm-2">Recipe ID</dt>
            <dd class="col-sm-10">@Model.RecipeId</dd>

            <dt class="col-sm-2">Recipe Name</dt>
            <dd class="col-sm-10">@Model.Name</dd>


            <dt class="col-sm-2">Recipe details</dt>
            <dd class="col-sm-10">
                <ul>
                    @foreach (var item in Model.RecipeRawMaterials)
                    {
                        <li>@item.Text</li>
                    }
                </ul>
            </dd>

            <hr>

            <dt class="col-sm-2">Raw Materials</dt>
            <dd class="col-sm-10">
                <ul>
                    @for (int i = 0; i < Model.RawMaterialsIds.Count; i++)
                    {
              <li>@Model.RawMaterials.FirstOrDefault(rm => rm.Value == Model.RawMaterialsIds[i].ToString())?.Text - Quantity: @Model.Quantities[i] - Unit Cost: @Model.UnitCosts[i]</li>
                    }
                </ul>
            </dd>

            <dt class="col-sm-2">Raw Material Cost</dt>
            <dd class="col-sm-10">@Model.RawMaterialCost</dd>

            <dt class="col-sm-2">Recipe Cost</dt>
            <dd class="col-sm-10">@Model.RecipeCost</dd>

            <dt class="col-sm-2">Quantity</dt>
            <dd class="col-sm-10">@Model.Quantity</dd>

            <hr>

            <dt class="col-sm-2">Order Total Cost</dt>
            <dd class="col-sm-10">@Model.OrderTotalCost</dd>
        </dl>
        <hr>
        <div class="mt-3">
            <a class="btn btn-primary" href="@Url.Action("Index")">Back to List</a>
            <button id="print-button" class="btn btn-success ms-3">Print Order</button>
            <button id="reserve-materials-button" class="btn btn-success ms-3">Reserve Materials</button>
            <button id="return-button" class="btn btn-success ms-3">Un-Reserve</button>
            <a href="@Url.Action("ManualReturnMaterials", "Orders", new { id = Model.Id })" class="btn btn-success  ms-3">Partial Return </a>
            <button id="order-button" class="btn btn-primary ms-3">Order Completed</button>

        </div>
    </div>
    <form id="reserve-materials-form" method="post">
        @Html.AntiForgeryToken()

    </form>



    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>




    <script>
        document.getElementById("print-button").addEventListener("click", function () {
            window.print();
        });
    </script>


    <script>
        document.getElementById("reserve-materials-button").addEventListener("click", function () {
            const orderId = @Model.Id;

            fetch(`/Orders/ReserveMaterials/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
            })
                .then(response => {
                    if (response.ok) {
                        alert('Materials reserved successfully.');

                    } else if (response.status === 302) {
                        window.location.href = response.url;
                    } else {
                        alert('Failed to reserve materials.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while reserving materials.');
                });
        });
    </script>

    <script>
        document.getElementById("return-button").addEventListener("click", function () {
            const orderId = @Model.Id;
            fetch(`/Orders/ReturnMaterials/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
            })
                .then(response => {
                    if (response.ok) {
                        alert('Materials returned successfully.');
                        location.reload();
                    } else {
                        alert('Failed to return materials.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while returning materials.');
                });
        });
    </script>


    <script>
        document.getElementById("order-button").addEventListener("click", function () {
            const orderId = @Model.Id;
            fetch(`/Orders/OrderCompleted/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
            })
                .then(response => {
                    if (response.ok) {
                        alert('Order Completed successfully.');
                        location.reload();
                    } else {
                        alert('Failed   ');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred .');
                });
        });
    </script>



</body>
</html>
